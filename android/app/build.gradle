plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
} else {
    // Fallback values if key.properties doesn't exist
    keystoreProperties['storePassword'] = 'sismoalarm2024'
    keystoreProperties['keyPassword'] = 'sismoalarm2024'
    keystoreProperties['keyAlias'] = 'upload'
    keystoreProperties['storeFile'] = 'upload-keystore.jks'
}

android {
    namespace = "com.burakztrk123.sismoalarm"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
        coreLibraryDesugaringEnabled true
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.burakztrk123.sismoalarm"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
    }

    signingConfigs {
        release {
            keyAlias 'upload'
            keyPassword 'sismoalarm2024'
            storeFile file('upload-keystore.jks')
            storePassword 'sismoalarm2024'
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            
            // Disable ProGuard/R8 to avoid missing class issues
            minifyEnabled false
            shrinkResources false
            // proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            
            // Optimize for size
            zipAlignEnabled true
            
            // Build optimizations
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
        }
        
        debug {
            signingConfig signingConfigs.debug
            debuggable true
            minifyEnabled false
            shrinkResources false
        }
    }
}

flutter {
    source = "../.."
}

dependencies {
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.4'
}
